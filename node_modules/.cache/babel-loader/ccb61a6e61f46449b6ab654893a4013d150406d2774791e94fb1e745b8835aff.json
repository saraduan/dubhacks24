{"ast":null,"code":"var _jsxFileName = \"/Users/evanchang/Desktop/info340/project-info340-group-7/src/Review.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from 'react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './index.css';\nimport { getDatabase, ref, push, set, child, get } from 'firebase/database';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Review(props) {\n  _s();\n  const [reviewText, setReviewText] = useState('');\n  const [reviews, setReviews] = useState([]);\n  useEffect(() => {\n    // Fetch reviews from Firebase when component mounts\n    const fetchReviews = async () => {\n      try {\n        const db = getDatabase();\n        const reviewsRef = ref(db, 'reviews');\n        const reviewsSnapshot = await get(child(reviewsRef));\n        if (reviewsSnapshot.exists()) {\n          const reviewsData = reviewsSnapshot.val();\n          const reviewsArray = Object.keys(reviewsData).map(key => ({\n            id: key,\n            ...reviewsData[key]\n          }));\n          setReviews(reviewsArray);\n        }\n      } catch (error) {\n        console.error('Error fetching reviews: ', error);\n      }\n    };\n    fetchReviews();\n  }, []);\n  const handleChange = event => {\n    setReviewText(event.target.value);\n  };\n  const handleSubmit = async event => {\n    event.preventDefault();\n    try {\n      const db = getDatabase();\n      const reviewsRef = ref(db, 'reviews');\n      const newReviewRef = push(reviewsRef);\n      await set(newReviewRef, {\n        text: reviewText\n      });\n      setReviewText('');\n    } catch (error) {\n      // Handle error\n      console.error('Error adding review: ', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"review-form\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        className: \"review-text\",\n        placeholder: \"Write your review here...\",\n        value: reviewText,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"submit-button\",\n        children: \"Submit Review\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(Review, \"Y6AFLV/lbt9IdOSonDbecqSIlwc=\");\n_c = Review;\nexport { Review };\nvar _c;\n$RefreshReg$(_c, \"Review\");","map":{"version":3,"names":["React","useState","useRef","getDatabase","ref","push","set","child","get","jsxDEV","_jsxDEV","Review","props","_s","reviewText","setReviewText","reviews","setReviews","useEffect","fetchReviews","db","reviewsRef","reviewsSnapshot","exists","reviewsData","val","reviewsArray","Object","keys","map","key","id","error","console","handleChange","event","target","value","handleSubmit","preventDefault","newReviewRef","text","className","children","onSubmit","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","type","_c","$RefreshReg$"],"sources":["/Users/evanchang/Desktop/info340/project-info340-group-7/src/Review.js"],"sourcesContent":["import React, { useState, useRef } from 'react';\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport './index.css';\nimport { getDatabase, ref, push, set, child, get } from 'firebase/database';\n\nfunction Review(props) {\n  const [reviewText, setReviewText] = useState('');\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    // Fetch reviews from Firebase when component mounts\n    const fetchReviews = async () => {\n      try {\n        const db = getDatabase();\n        const reviewsRef = ref(db, 'reviews');\n        const reviewsSnapshot = await get(child(reviewsRef));\n        if (reviewsSnapshot.exists()) {\n          const reviewsData = reviewsSnapshot.val();\n          const reviewsArray = Object.keys(reviewsData).map(key => ({\n            id: key,\n            ...reviewsData[key]\n          }));\n          setReviews(reviewsArray);\n        }\n      } catch (error) {\n        console.error('Error fetching reviews: ', error);\n      }\n    };\n    \n    fetchReviews();\n  }, []);\n\n  const handleChange = (event) => {\n    setReviewText(event.target.value);\n  };\n\n  const handleSubmit = async (event) => {\n    event.preventDefault();\n    try {\n      const db = getDatabase();\n      const reviewsRef = ref(db, 'reviews');\n      const newReviewRef = push(reviewsRef);\n      await set(newReviewRef, {\n        text: reviewText,\n      });\n      setReviewText('');\n    } catch (error) {\n      // Handle error\n      console.error('Error adding review: ', error);\n    }\n  };\n\n  return (\n    <div className=\"review-form\">\n      <form onSubmit={handleSubmit}>\n        <textarea className=\"review-text\" placeholder=\"Write your review here...\" value={reviewText} onChange={handleChange} />\n        <button type=\"submit\" className=\"submit-button\">Submit Review</button>\n      </form>\n    </div>\n  );\n}\n\nexport { Review };"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}